cmake_minimum_required(VERSION 2.4)
project(hwtrycatch)
file(GLOB SOURCE_FILES "src/*.c" "src/*.cpp")
file(GLOB HEADER_FILES "inc/*.h")
list(REMOVE_ITEM SOURCE_FILES ${CMAKE_CURRENT_SOURCE_DIR}/src/tests.cpp)
source_group("Header files" FILES ${HEADER_FILES})
include_directories("inc")
include_directories("googletest/googletest")
include_directories("googletest/googlemock")
include_directories("googletest/googletest/include")
include_directories("googletest/googlemock/include")
find_package(Threads)
add_library(${PROJECT_NAME} STATIC ${SOURCE_FILES} ${HEADER_FILES})
add_executable(${PROJECT_NAME}_tests "src/tests.cpp")
target_link_libraries(${PROJECT_NAME}_tests ${CMAKE_THREAD_LIBS_INIT} ${PROJECT_NAME})
option(ARCH32 ARCH32 OFF)
if(CMAKE_CXX_COMPILER_ID MATCHES "GNU|Clang")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
    if(NOT CMAKE_SYSTEM_NAME MATCHES "Darwin" AND NOT ANDROID)
        if(ARCH32)
            set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -m32")
            set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -m32")
        else()
            set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -m64")
            set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -m64")
        endif()
    endif()
endif()
if(CMAKE_SYSTEM_NAME MATCHES "Darwin")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -stdlib=libc++")
endif()
